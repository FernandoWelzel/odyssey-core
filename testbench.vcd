$date
	Sun Apr 14 22:07:51 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 32 ! w_data [31:0] $end
$var wire 32 " inst_address [31:0] $end
$var wire 32 # data_address [31:0] $end
$var parameter 32 $ DATA_WIDTH $end
$var parameter 32 % PERIOD $end
$var parameter 32 & REGISTERS $end
$var reg 1 ' clk $end
$var reg 32 ( inst [31:0] $end
$var reg 32 ) r_data [31:0] $end
$var reg 1 * rst $end
$var integer 32 + FILE [31:0] $end
$var integer 32 , status [31:0] $end
$scope module core_i $end
$var wire 1 ' clk $end
$var wire 32 - inst [31:0] $end
$var wire 32 . r_data [31:0] $end
$var wire 1 * rst $end
$var wire 5 / rs2 [4:0] $end
$var wire 5 0 rs1 [4:0] $end
$var wire 5 1 rd [4:0] $end
$var wire 7 2 opcode [6:0] $end
$var wire 12 3 imm [11:0] $end
$var wire 7 4 funct7 [6:0] $end
$var wire 3 5 funct3 [2:0] $end
$var parameter 32 6 DATA_WIDTH $end
$var parameter 32 7 REGISTERS $end
$var reg 32 8 data_address [31:0] $end
$var reg 32 9 inst_address [31:0] $end
$var reg 32 : w_data [31:0] $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 ; i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 7
b100000 6
b100000 &
b1010 %
b100000 $
$end
#0
$dumpvars
b100000 ;
bx :
bx 9
bx 8
b0 5
b110011 4
b0 3
b110011 2
b0 1
b0 0
b0 /
bx .
b110011 -
b1 ,
b10000000000000000000000000000011 +
0*
bx )
b110011 (
0'
bx #
bx "
bx !
$end
#5
1'
#10
0'
b100011 2
b10 5
b100011 4
b10000000100011 (
b10000000100011 -
#15
b1 #
b1 8
b1 !
b1 :
1'
#20
0'
